---
import "normalize.css";
import "styles/prose.css";

import Footer from "components/Footer.astro";
import NavBar from "components/NavBar.astro";

export interface Props {
    title?: string;
    description: string;
    opengraph?: boolean;
    breadcrumbs?: [name: string, url: string][];
}

const { title, description, opengraph, breadcrumbs } = Astro.props;

const structuredData = [
    // General website information
    {
        "@context": "https://schema.org",
        "@type": "WebSite",
        name: "Vencord",
        alternateName: "VC",
        url: Astro.site,
    },
    // Application information
    {
        "@context": "https://schema.org",
        "@type": ["WebApplication", "SoftwareApplication"],
        name: "Vencord",
        operatingSystem: "Windows,macOS,Linux",
        applicationCategory: "UtilitiesApplication",
        browserRequirements:
            "Requires UserScript or extension support. Requires modern JavaScript support.",
        offers: {
            "@type": "Offer",
            price: "0",
        },
    },
] as any[];

// Should show a nicer path for subpages.
if (breadcrumbs) {
    const breadcrumbList = {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        itemListElement: [] as any[],
    };

    for (let i = 0; i < breadcrumbs.length; i++) {
        const crumb = breadcrumbs[i];

        breadcrumbList.itemListElement.push({
            "@type": "ListItem",
            position: i + 1,
            name: crumb[0],
            item: new URL(crumb[1], Astro.site).toString(),
        });
    }

    structuredData.push(breadcrumbList);
}

// SearchAction should only be on the homepage, according to Google.
if (Astro.url.pathname === "/") {
    structuredData[0].potentialAction = {
        "@type": "SearchAction",
        target: {
            "@type": "EntryPoint",
            urlTemplate: "https://vencord.dev/plugins#{plugin_name}",
        },
        "query-input": "required name=plugin_name",
    };
}
---

<!doctype html>
<html lang="en">
    <!-- read if cute :3 -->
    <head>
        <title>{title ? `${title} | Vencord` : "Vencord"}</title>

        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" href="/assets/favicon.png" />

        <link
            rel="preload"
            href="/fonts/Inter.var-subset.woff2"
            as="font"
            type="font/woff2"
            crossorigin
        />

        <meta name="description" content={description} />
        <meta name="author" content="Vencord Contributors" />
        <meta name="theme-color" content="#dd7878" />

        {
            opengraph !== false && (
                <>
                    <meta name="og:type" content="website" />
                    <meta name="og:title" content={title ?? "Vencord"} />
                    <meta name="og:description" content={description} />
                    <meta name="og:url" content={Astro.url} />
                    <meta
                        name="og:image"
                        content={new URL("/assets/favicon.png", Astro.site)}
                    />
                </>
            )
        }
        {
            /* FIXME: Seems to be a bug in Astro because this statement doesn't work in the above block. */
        }
        {
            title && opengraph !== false && (
                <meta name="og:site_name" content="Vencord" />
            )
        }

        <script
            type="application/ld+json"
            set:html={JSON.stringify(structuredData)}
        />

        <link rel="sitemap" href="/sitemap-index.xml" />
        {/* explode darkreader */}
        <meta name="darkreader-lock" />
        <link
            rel="canonical"
            href={new URL(Astro.url.pathname, Astro.site).toString()}
        />
    </head>

    <body>
        {
            /* Loads theme (this fixes a "flickering" bug
            that occurs when the theme script loads after
            the page content does, causing it to briefly
            show the original colors.)
            */
        }
        <script is:raw>
            const theme = localStorage.theme?.toLowerCase();
            const options = ["light", "dark"];
            if (options.includes(theme)) document.body.classList.add(theme);
        </script>

        <NavBar />

        <div>
            <slot />
        </div>

        <Footer />
    </body>
</html>

<style>
    :root {
        /* Light Theme */
        --light-bg0: #f9f5d7;
        --light-bg1: #f5edca;
        --light-bg2: #f2eac7;
        --light-bg3: #f2e4bc;
        --light-bg4: #efdfb7;
        --light-bg5: #ebdbb2;

        --light-bgDim: #f2eac7;

        --light-bgCurrentWord: #f2eac7;

        --light-bgDiffGreen: #e4edc7;
        --light-bgDiffBlue: #e0e9d3;
        --light-bgDiffRed: #f8e4c9;

        --light-bgVisualYellow: #f9e9bf;
        --light-bgVisualGreen: #dce5c2;
        --light-bgVisualBlue: #d8e1cc;
        --light-bgVisualRed: #f0ddc3;

        --light-bgAccentYellow: #a96b2d;
        --light-bgAccentGreen: #6f8252;
        --light-bgAccentRed: #ae5858;

        --light-accentRed: #c14a4a;
        --light-accentOrange: #c35e0a;
        --light-accentYellow: #b37109;
        --light-accentGreen: #6c782e;
        --light-accentAqua: #4b7a5d;
        --light-accentBlue: #45707a;
        --light-accentPurple: #945e80;

        --light-accentPurpleRgb: 148, 94, 128; /* why? */

        --light-fg0: #644735;
        --light-fg0-muted: #64473566;
        --light-fg0-muted2: #64473525;
        --light-fg1: #503829;

        --light-grey0: #a79a83;
        --light-grey1: #928374;
        --light-grey2: #7c6f64;

        /* Dark Theme */
        --dark-bg0: #1d2021;
        --dark-bg1: #282828;
        --dark-bg2: #282828;
        --dark-bg3: #3c3836;
        --dark-bg4: #3c3836;
        --dark-bg5: #504944;

        --dark-bgDim: #141617;

        --dark-bgCurrentWord: #32302f;

        --dark-bgDiffGreen: #32361a;
        --dark-bgDiffBlue: #0d3138;
        --dark-bgDiffRed: #3c1f1e;

        --dark-bgVisualYellow: #473c29;
        --dark-bgVisualGreen: #333e34;
        --dark-bgVisualBlue: #2e3b3b;
        --dark-bgVisualRed: #442e2d;

        --dark-bgAccentYellow: #d8a656;
        --dark-bgAccentGreen: #a8b665;
        --dark-bgAccentRed: #ea6962;

        --dark-accentRed: #ea6962;
        --dark-accentOrange: #e78a4f;
        --dark-accentYellow: #d8a656;
        --dark-accentGreen: #a8b665;
        --dark-accentAqua: #89b481;
        --dark-accentBlue: #7caea3;
        --dark-accentPurple: #d3869b;

        --dark-accentPurpleRgb: 211, 133, 155;

        --dark-fg0: #d4be98;
        --dark-fg0-muted: #d4be9866;
        --dark-fg0-muted2: #d4be9825;
        --dark-fg1: #ddc7a0;

        --dark-grey0: #7c6f64;
        --dark-grey1: #918274;
        --dark-grey2: #a79a83;

        /* Astro Code Colors */

        --astro-code-color-text: var(--fg0);
        --astro-code-color-background: var(--bg0);
        --astro-code-token-constant: var(--accentAqua);
        --astro-code-token-string: var(--accentYellow);
        --astro-code-token-string-expression: var(--accentYellow);
        --astro-code-token-comment: var(--grey1);
        --astro-code-token-keyword: var(--accentOrange);
        --astro-code-token-parameter: var(--accentBlue);
        --astro-code-token-function: var(--accentGreen);
        --astro-code-token-punctuation: var(--fg0);
        --astro-code-token-link: var(--accentBlue);
    }

    /* Light class */
    .light {
        --bg0: var(--light-bg0);
        --bg1: var(--light-bg1);
        --bg2: var(--light-bg2);
        --bg3: var(--light-bg3);
        --bg4: var(--light-bg4);
        --bg5: var(--light-bg5);

        --bgDim: var(--light-bgDim);

        --bgCurrentWord: var(--light-bgCurrentWord);

        --bgDiffGreen: var(--light-bgDiffGreen);
        --bgDiffBlue: var(--light-bgDiffBlue);
        --bgDiffRed: var(--light-bgDiffRed);

        --bgVisualYellow: var(--light-bgVisualYellow);
        --bgVisualGreen: var(--light-bgVisualGreen);
        --bgVisualBlue: var(--light-bgVisualBlue);
        --bgVisualRed: var(--light-bgVisualRed);

        --bgAccentYellow: var(--light-bgAccentYellow);
        --bgAccentGreen: var(--light-bgAccentGreen);
        --bgAccentRed: var(--light-bgAccentRed);

        --accentRed: var(--light-accentRed);
        --accentOrange: var(--light-accentOrange);
        --accentYellow: var(--light-accentYellow);
        --accentGreen: var(--light-accentGreen);
        --accentAqua: var(--light-accentAqua);
        --accentBlue: var(--light-accentBlue);
        --accentPurple: var(--light-accentPurple);

        --accentPurpleRgb: var(--light-accentPurpleRgb);

        --fg0: var(--light-fg0);
        --fg0-muted: var(--light-fg0-muted);
        --fg0-muted2: var(--light-fg0-muted2);
        --fg1: var(--light-fg1);

        --grey0: var(--light-grey0);
        --grey1: var(--light-grey1);
        --grey2: var(--light-grey2);
    }

    /* Dark class (+ default colors) */
    .dark,
    :root {
        --bg0: var(--dark-bg0);
        --bg1: var(--dark-bg1);
        --bg2: var(--dark-bg2);
        --bg3: var(--dark-bg3);
        --bg4: var(--dark-bg4);
        --bg5: var(--dark-bg5);

        --bgDim: var(--dark-bgDim);

        --bgCurrentWord: var(--dark-bgCurrentWord);

        --bgDiffGreen: var(--dark-bgDiffGreen);
        --bgDiffBlue: var(--dark-bgDiffBlue);
        --bgDiffRed: var(--dark-bgDiffRed);

        --bgVisualYellow: var(--dark-bgVisualYellow);
        --bgVisualGreen: var(--dark-bgVisualGreen);
        --bgVisualBlue: var(--dark-bgVisualBlue);
        --bgVisualRed: var(--dark-bgVisualRed);

        --bgAccentYellow: var(--dark-bgAccentYellow);
        --bgAccentGreen: var(--dark-bgAccentGreen);
        --bgAccentRed: var(--dark-bgAccentRed);

        --accentRed: var(--dark-accentRed);
        --accentOrange: var(--dark-accentOrange);
        --accentYellow: var(--dark-accentYellow);
        --accentGreen: var(--dark-accentGreen);
        --accentAqua: var(--dark-accentAqua);
        --accentBlue: var(--dark-accentBlue);
        --accentPurple: var(--dark-accentPurple);

        --accentPurpleRgb: var(--dark-accentPurpleRgb);

        --fg0: var(--dark-fg0);
        --fg0-muted: var(--dark-fg0-muted);
        --fg0-muted2: var(--dark-fg0-muted2);
        --fg1: var(--dark-fg1);

        --grey0: var(--dark-grey0);
        --grey1: var(--dark-grey1);
        --grey2: var(--dark-grey2);
    }

    /* Light theme (if browser is set to light) */
    /* (YES IT'S DUPLICATE CODE SHHHHHHHHHHHHH) */
    @media (prefers-color-scheme: light) {
        :root {
            --bg0: var(--light-bg0);
            --bg1: var(--light-bg1);
            --bg2: var(--light-bg2);
            --bg3: var(--light-bg3);
            --bg4: var(--light-bg4);
            --bg5: var(--light-bg5);

            --bgDim: var(--light-bgDim);

            --bgCurrentWord: var(--light-bgCurrentWord);

            --bgDiffGreen: var(--light-bgDiffGreen);
            --bgDiffBlue: var(--light-bgDiffBlue);
            --bgDiffRed: var(--light-bgDiffRed);

            --bgVisualYellow: var(--light-bgVisualYellow);
            --bgVisualGreen: var(--light-bgVisualGreen);
            --bgVisualBlue: var(--light-bgVisualBlue);
            --bgVisualRed: var(--light-bgVisualRed);

            --bgAccentYellow: var(--light-bgAccentYellow);
            --bgAccentGreen: var(--light-bgAccentGreen);
            --bgAccentRed: var(--light-bgAccentRed);

            --accentRed: var(--light-accentRed);
            --accentOrange: var(--light-accentOrange);
            --accentYellow: var(--light-accentYellow);
            --accentGreen: var(--light-accentGreen);
            --accentAqua: var(--light-accentAqua);
            --accentBlue: var(--light-accentBlue);
            --accentPurple: var(--light-accentPurple);

            --accentPurpleRgb: var(--light-accentPurpleRgb);

            --fg0: var(--light-fg0);
            --fg0-muted: var(--light-fg0-muted);
            --fg1: var(--light-fg1);

            --grey0: var(--light-grey0);
            --grey1: var(--light-grey1);
            --grey2: var(--light-grey2);
        }
    }

    @font-face {
        font-family: "Inter";
        src: url("/fonts/Inter.var-subset.woff2") format("woff2");
        font-weight: 100 900;
        font-display: swap;
        font-style: normal;
        font-named-instance: "Regular";
    }

    html {
        font-family: Inter, system-ui, sans-serif;
        font-weight: var(--fontWeightRegular);
        line-height: 1.5;

        color-scheme: dark light;
    }

    body {
        --horizontal-margin: 20%;

        display: flex;
        flex-direction: column;
        justify-content: flex-start;

        min-height: 100vh;

        background-color: var(--bg1);
        color: var(--fg0);
    }

    div {
        margin: 2em var(--horizontal-margin);
        height: 100%;
        flex: 1;
        position: relative;
    }

    @media screen and (max-width: 1200px) {
        body {
            --horizontal-margin: 5%;
        }
    }
</style>

<style is:global>
    .no-wrap {
        white-space: nowrap;
    }

    ::selection {
        background-color: var(--fg0);
        color: var(--bg1);
    }

    pre code {
        counter-reset: code-line-number;
        counter-increment: code-line-number 0;
    }

    pre code .line::before {
        content: counter(code-line-number);
        counter-increment: code-line-number;

        display: inline-block;
        width: 1rem;
        margin-right: 1.5rem;
        text-align: right;

        color: var(--grey0);
    }

    a {
        color: var(--accentBlue);
    }

    mark {
        background: var(--accentPurple);
        color: var(--bg1);
    }
</style>
